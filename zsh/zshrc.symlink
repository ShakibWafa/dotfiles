#
[[ $- != *i* ]] && return

source ~/.zplug/init.zsh

zplug "plugins/command-not-found", from:oh-my-zsh
zplug "plugins/history",           from:oh-my-zsh
zplug "mafredri/zsh-async"
zplug "sindresorhus/pure"
zplug "zsh-users/zsh-autosuggestions"
zplug "zsh-users/zsh-syntax-highlighting", nice:10
zplug "plugins/history-substring-search", nice:10, from:oh-my-zsh

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
  printf "Install? [y/N]: "
  if read -q; then
    echo; zplug install
  fi
fi

zplug load

# history
if [ -z "$HISTFILE" ]; then
  HISTFILE=$HOME/.zsh_history
fi

HISTSIZE=100000
SAVEHIST=100000
setopt append_history
setopt extended_history
setopt hist_expire_dups_first
setopt hist_ignore_dups
setopt hist_ignore_space
setopt hist_verify
setopt inc_append_history
setopt share_history

zstyle ':completion:*' menu select

# vim keybindings for substring search
bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down

#
# Base16 Shell
BASE16_SHELL="$HOME/dotfiles/shell/base16-ocean.dark.sh"
[[ -s $BASE16_SHELL ]] && source $BASE16_SHELL

# Attach to an existing deattached session, or start a new one
if [[ -z "$TMUX" ]] ;then
  ID="`tmux ls | grep -vm1 attached | cut -d: -f1`" # get the id of a deattached session
  if [[ -z "$ID" ]] ;then # if not available create a new one
    tmux new-session
  else
    tmux attach-session -t "$ID" # if available attach to it
  fi
fi

if type fortune &>/dev/null; then
  fortune
fi

# VI
bindkey -v
export KEYTIMEOUT=1
